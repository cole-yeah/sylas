{"version":3,"sources":["lib/router/Router.js","lib/router/BrowserRouter.js","lib/router/Switch.js","lib/router/Route.js","lib/router/Link.js","pages/Alg/index.js","pages/Main/index.js","router/index.js","common/utils/history.js","App.js","reportWebVitals.js","index.js"],"names":["RouterContext","createContext","useRouterContext","useContext","Router","history","children","basename","useState","location","setLocation","useEffect","listen","curLocation","Provider","value","BrowserRouter","Switch","props","element","match","React","Children","forEach","child","isValidElement","path","pathname","cloneElement","computedMatch","renderFunc","Route","component","createElement","LinkAnchor","to","navigate","href","onClick","e","preventDefault","Link","curLink","push","Alg","Main","state","setState","console","log","prevState","createBrowserHistory","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b05a2f56.chunk.js","sourcesContent":["import React, { useEffect, useState, createContext, useContext } from 'react';\r\n\r\nconst RouterContext = createContext(null);\r\n\r\nconst Router = ({ history, children, basename = '' }) => {\r\n  const [location, setLocation] = useState(history.location);\r\n  useEffect(() => {\r\n    history.listen(curLocation => {\r\n      setLocation(curLocation.location);\r\n    });\r\n  }, [history]);\r\n  return (\r\n    <RouterContext.Provider\r\n      value={{\r\n        history,\r\n        location,\r\n        basename,\r\n      }}\r\n    >\r\n      {children}\r\n    </RouterContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRouterContext = () => useContext(RouterContext);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport Router from './Router';\r\n\r\nconst BrowserRouter = ({ history, children, basename = '' }) => {\r\n  return (\r\n    <Router history={history} basename={basename}>\r\n      {children}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default BrowserRouter;\r\n","import React from 'react';\r\nimport { useRouterContext } from './Router';\r\n\r\n// 根据url对组件进行匹配\r\nconst Switch = props => {\r\n  const { children } = props;\r\n  const { location, basename } = useRouterContext();\r\n  const renderFunc = () => {\r\n    let element,\r\n      match = null;\r\n    React.Children.forEach(children, child => {\r\n      if (!match && React.isValidElement(child)) {\r\n        element = child;\r\n        const path = `${basename}${child.props.path}`;\r\n        match = location.pathname === path;\r\n        // matchPath(location.pathname, { ...child.props, path });\r\n      }\r\n    });\r\n    return match\r\n      ? React.cloneElement(element, {\r\n          location,\r\n          computedMatch: match,\r\n        })\r\n      : null;\r\n  };\r\n  return renderFunc();\r\n};\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\n\r\nconst Route = props => {\r\n  const { component, children, computedMatch } = props;\r\n  return (\r\n    <>\r\n      {computedMatch\r\n        ? children\r\n          ? typeof children === 'function'\r\n            ? children(props)\r\n            : children\r\n          : React.createElement(component, props)\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Route;\r\n","import React from 'react';\nimport { useRouterContext } from './Router';\n\nconst LinkAnchor = ({ to, navigate, children }) => {\n  const handleClick = e => {\n    e.preventDefault();\n    navigate();\n  };\n  return (\n    <a href={to} onClick={handleClick}>\n      {children}\n    </a>\n  );\n};\n\nconst Link = ({ to, children }) => {\n  const { history, basename } = useRouterContext();\n  const curLink = `${basename}${to}`;\n  const navigate = () => {\n    history.push(curLink);\n  };\n  return <LinkAnchor to={curLink} navigate={navigate} children={children} />;\n};\n\nexport default Link;\n","import React from 'react';\nimport { Link } from '../../lib/router';\n\nconst Alg = () => {\n  return (\n    <div>\n      <Link to=\"/main\">go to main page</Link>\n    </div>\n  );\n};\n\nexport default Alg;\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from '../../lib/router';\r\n\r\nconst Main = () => {\r\n  const [state, setState] = useState(0);\r\n  useEffect(() => {\r\n    console.log('--------', state);\r\n  }, [state]);\r\n\r\n  const resetVal = () => setState(prevState => prevState + 1);\r\n  return (\r\n    <div>\r\n      <div onClick={resetVal}>0000</div>\r\n      <Link to=\"/alg\">alg page</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'lib/router';\nimport Alg from 'pages/Alg';\nimport Main from 'pages/Main';\n\nconst isProdEnv = process.env.NODE_ENV === 'production';\n\nconst Router = ({ history }) => {\n  return (\n    <BrowserRouter history={history} basename={isProdEnv ? '/sylas' : ''}>\n      <Switch>\n        <Route path=\"/alg\" component={Alg} />\n        <Route path=\"/main\" component={Main} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React, { useState } from 'react';\nimport Router from './router';\nimport history from './common/utils/history';\n\n// const cloneDeep = target => {\n//   return {\n//     ...target,\n//   };\n// };\n\nfunction App() {\n  const [state, setState] = useState(0);\n  // useEffect(() => {\n  //   const obj = {\n  //     a: {\n  //       aa: {\n  //         aaa: 1,\n  //       },\n  //     },\n  //     b: {\n  //       bb: 2,\n  //     },\n  //     c: 3,\n  //   };\n  //   const newObj = produce(obj, draft => {\n  //     draft.a.aa.aaa = 10;\n  //   });\n  //   console.log('----', newObj.a.aa, obj.a.aa, newObj.a.aa === obj.a.aa);\n  //   console.log('--==--', newObj.b, obj.b, newObj.b === obj.b);\n  // }, []);\n\n  const resetVal = () => setState(prevState => prevState + 1);\n\n  // useEffect(() => {\n  //   console.log('--------', state);\n  // }, [state]);\n\n  return (\n    <div className=\"App\">\n      <div>{state}</div>\n      <div onClick={resetVal}>点击 +1</div>\n      <Router history={history} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}